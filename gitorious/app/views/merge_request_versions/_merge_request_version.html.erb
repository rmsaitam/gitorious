<%
#--
#   Copyright (C) 2012 Gitorious AS
#   Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies)
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU Affero General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU Affero General Public License for more details.
#
#   You should have received a copy of the GNU Affero General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
#++
%>
<% if @commit -%>
<div class="commit-infobox">
  <div class="commit-meta">
    <ul class="people">
      <li class="avatar">
        <%= avatar_from_email(@commit.committer.email, { :size => 32 }) %>
      </li>
      <li>
        <%=h @commit.committer.name -%>
        <%= render_email(@commit.committer.email) -%>
        <% if @commit.committer != @commit.author -%>
          <small>(<%= t("views.commits.committer") %>)</small>
        <% end -%>
      </li>
      <li class="meta"><%= time_ago(@commit.committed_date) -%></li>
      <% if @commit.committer != @commit.author -%>
        <li class="clear"></li>
        <li class="avatar">
                <%= avatar_from_email(@commit.author.email, { :size => 32 }) %>
        </li>
        <li>
            <%=h @commit.author.name -%>
            <%= render_email(@commit.author.email) -%>
          <small>(<%= t("views.commits.author") %>)</small>
        </li>
        <li class="meta"><%= time_ago(@commit.authored_date) -%></li>
      <% end -%>
    </ul>
  </div>
  <pre class="commit_message"><%= h(@commit.message) -%></pre>
</div>
<% end -%>

<%= render :partial => "comments/inline_comment_form", :locals => {
:commentable_type => "merge_request_version",
:comment => @version.comments.build,
:url => repo_owner_path(@merge_request.target_repository,
    [
    @merge_request.target_repository.project,
    @merge_request.target_repository,
    @merge_request, @version, :comments]),
:sha1 => nil,
:include_favorite_checkbox => !@merge_request.watched_by?(current_user)
} -%>

<%= render_inline_diffs_controls("merge-requests") %>
<%= render_inline_diffs_with_stats(diffs){|file|@version.comments_for_path_and_sha(file.a_path, @sha_range)} -%>

<% if @timeout %>
  <div class="timeout">
    <h3>Git timeout</h3>
    <p>
      We're sorry, but it seems that the server timed out trying to fetch the
      diffs for your merge request. This typically means that the merge request
      is large. Please review changes locally:
    </p>
    <pre># Create a local branch
git checkout -b merge-requests/<%= @merge_request.sequence_number %>

# Fetch the merge request into the new branch
git pull <%= @merge_request.target_repository.clone_url %> <%= @merge_request.merge_branch_name %>

# Show the commits
git log --pretty=oneline --abbrev-commit <%= @merge_request.target_branch %>..merge-requests/<%= @merge_request.sequence_number %></pre>
    <p>
      If you believe that this merge request is indeed not too big for the web
      interface, please
      contact <a href="mailto:<%= GitoriousConfig["gitorious_support_email"]
      %>"><%= GitoriousConfig["gitorious_support_email"] %></a>.
    </p>
  </div>
<% end %>
